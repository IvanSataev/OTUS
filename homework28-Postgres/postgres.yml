- name: postgres master/slave
  hosts: all
  handlers:
  - name: RESTART POSTGRES
    service: 
      name: postgresql-14
      state: restarted
  tasks:
  - name: Set up repo
    replace:
      path: "{{ item }}"
      regexp: '^mirrorlist'
      replace: '#mirrorlist'
    with_items:
      - /etc/yum.repos.d/CentOS-Linux-AppStream.repo
      - /etc/yum.repos.d/CentOS-Linux-BaseOS.repo

  - name: Set up repo
    replace:
      path: "{{ item }}"
      regexp: '#baseurl=http://mirror.centos.org'
      replace: 'baseurl=http://vault.centos.org'
    with_items:
      - /etc/yum.repos.d/CentOS-Linux-AppStream.repo
      - /etc/yum.repos.d/CentOS-Linux-BaseOS.repo

  - name: install soft
    ansible.builtin.yum:
      name: 
        - vim
        - epel-release
        - python3-pexpect
        - python3-psycopg2
        - https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
      disable_gpg_check: yes  
      state: present
      update_cache: true
   
  - name: disable old postgresql module
    shell: dnf -qy module disable postgresql --nogpgcheck

  - name: install soft
    ansible.builtin.yum:
      name: 
        - postgresql14
        - barman-cli
      state: present
      disable_gpg_check: yes  
      update_cache: true

  - name: disable selinux
    shell: setenforce 0


- name: postgres master configure
  hosts: master
  handlers:
  - name: RESTART POSTGRES
    service: 
      name: postgresql-14
      state: restarted
  tasks:  
  - name: install soft
    ansible.builtin.yum:
      name: 
        - postgresql14-server
      state: present
      disable_gpg_check: yes  
      update_cache: true
  - name: check init 
    stat:
      path: /var/lib/pgsql/14/data/pg_stat
    register: stat_result

  - name: initialization setup
    shell: sudo /usr/pgsql-14/bin/postgresql-14-setup initdb
    when: not stat_result.stat.exists

  - name: start postgres
    service: 
      name:  postgresql-14
      state: started
      enabled:  yes
 
  - name: generate SSH key for postgres
    user:
      name: postgres
      generate_ssh_key: yes
      ssh_key_type: rsa
      ssh_key_bits: 4096
      force: no

  - name: Create barman user
    become_user: postgres
    postgresql_user:
      name: barman
      password:  'Otus2022!'
      role_attr_flags: SUPERUSER 
    ignore_errors: true

  - name:  fetch key for barman
    ansible.builtin.fetch:
      src: /var/lib/pgsql/.ssh/id_rsa.pub
      dest: ./postgres.pub
      flat: yes    

  - name: set config 
    ansible.builtin.template:
      src:  "{{item.src}}"
      dest:  "{{item.dest}}"
      mode: 0644
      owner: postgres
      group: postgres
    loop:
      - { src: templates/pg_hba.conf, dest:  /var/lib/pgsql/14/data/pg_hba.conf}
      - { src: templates/postgresql.conf, dest: /var/lib/pgsql/14/data/postgresql.conf}
    notify: RESTART POSTGRES     
 
  - name: check init 
    stat:
      path: /var/lib/pgsql/14/data/pg_stat
    register: stat_result

  - name: initialization setup
    shell: sudo /usr/pgsql-14/bin/postgresql-14-setup initdb
    when: not stat_result.stat.exists

  - name: Create replicator user
    become_user: postgres
    postgresql_user:
      name: replication
      password: 'Otus2022!'
      role_attr_flags: REPLICATION 
    ignore_errors: true

  - name: Create DB for backup
    become_user: postgres
    postgresql_db:
      name: otus
      encoding: UTF-8
      template: template0
      state: present  
  - name: Add tables to otus_backup
    become_user: postgres
    postgresql_table:
      db: otus
      name: test1
      state: present
- name: slave configure
  hosts: slave
  handlers:
  - name: RESTART POSTGRES
    service: 
      name: postgresql-14
      state: restarted
  tasks:    
  - name: install soft
    ansible.builtin.yum:
      name: 
        - postgresql14-server
      state: present
      disable_gpg_check: yes  
      update_cache: true
  - name: check init 
    stat:
      path: /var/lib/pgsql/14/data/pg_stat
    register: stat_result

  - name: initialization setup
    shell: sudo /usr/pgsql-14/bin/postgresql-14-setup initdb
    when: not stat_result.stat.exists

  - name: start postgres
    service: 
      name:  postgresql-14
      state: started
      enabled:  yes
 
  - name: STOP POSTGRES
    service: 
      name: postgresql-14
      state: stopped

  - name: Remove files from data catalog
    file:
      path: /var/lib/pgsql/14/data/
      state: absent

  - name: copy files from master to slave
    become_user: postgres
    expect:
      command: 'pg_basebackup -h 192.168.56.11 -U  replication -p 5432 -D /var/lib/pgsql/14/data/ -R -P'
      responses: 
        '.*Password*': "Otus2022!"
 
  - name: set config 
    ansible.builtin.template:
      src:  "{{item.src}}"
      dest:  "{{item.dest}}"
      mode: 0644
      owner: postgres
      group: postgres
    loop:
      - { src: templates/pg_hba.conf, dest:  /var/lib/pgsql/14/data/pg_hba.conf}
      - { src: templates/postgresql.conf, dest: /var/lib/pgsql/14/data/postgresql.conf}
    notify: RESTART POSTGRES  

- name: postgres backup configure
  hosts: barman
  tasks:  
    - name: install soft
      ansible.builtin.yum:
        name: barman
        state: present
        update_cache: true

    - name: generate SSH key for barman
      user:
        name: barman
        uid: 993
        shell: /bin/bash
        generate_ssh_key: yes
        ssh_key_type: rsa
        ssh_key_bits: 4096
        force: no    

    - name: fetch all public ssh keys barman
      shell: cat /var/lib/barman/.ssh/id_rsa.pub
      register: ssh_keys

    - name: transfer public key to barman
      delegate_to: master
      authorized_key:
        key: "{{ ssh_keys.stdout }}"
        comment: "{{ansible_hostname}}"
        user: postgres

  

    - name: copy postgres key    
      ansible.builtin.copy:
        dest: /var/lib/barman/.pgpass
        content: '192.168.56.11:5432:*:barman:Otus2022!'
        owner: barman
        group: barman
        mode: '0600'

    - name:  fetch key for barman
      ansible.builtin.fetch:
        src:  /var/lib/barman/.ssh/id_rsa.pub 
        dest: ./barman.pub
        flat: yes 

    - name: copy barman.conf
      template:
        src: templates/barman.conf
        dest: /etc/barman/barman.conf
        owner: barman
        group: barman
        mode: '0755'

    - name: copy master.conf
      template:
        src: templates/master.conf
        dest: /etc/barman/conf.d/master.conf
        owner: barman
        group: barman
        mode: '0755'


    - name: barman switch-wal master
      become_user: barman
      shell: barman switch-wal master --force --archive --archive-timeout 30

    - name: barman cron
      become_user: barman
      shell: barman cron