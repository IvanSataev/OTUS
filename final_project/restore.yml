- name: Restore machine
  hosts: back, front
  tasks:
  - name: Check state docker compose 
    stat: 
      path: /opt/gallery3/docker-compose.yml
    register: check_docker  

  - name: Stop docker compose
    shell: cd /opt/gallery3 && docker compose stop
    when: check_docker.stat.exists
  
  - name: check mnt
    stat:
      path: /mnt/opt
    register: check_mnt

  - name: delete file
    file:
      path: /mnt/opt
      state: absent
    when: check_mnt.stat.exists

  - name: delete file from opt
    file:
      path: /opt/gallery3
      state: absent
    when: check_docker.stat.exists

  - name: Get name backup
    shell: "borg list borg@192.168.56.20:application-{{ansible_hostname}} | tail -7 | head -1 | awk '{print $1}'"
    register: borg_backup_name

  - name: Mount backup repository
    shell: "cd /mnt && borg extract  borg@192.168.56.20:application-{{ansible_hostname}}::{{borg_backup_name.stdout}}"


  - name: Copy files
    copy:
      src: /mnt/opt/gallery3 
      dest: /opt/
      remote_src: yes
      mode: preserve
  # - name: Copy files
  #   shell: "cp -rp /mnt/opt/gallery3 /opt/"
  - name: docker compose up
    shell: 'cd /opt/gallery3 && docker compose -p gallery3 up -d'    







- name: Restore monitoring
  hosts: monitoring
  tasks:
  - name: Get name backup
    shell: borg list borg@192.168.56.20:zabbix | tail -3 | head -1 | awk '{print $1}'
    register: borg_backup_name
 
  - name: check mnt
    stat:
      path: /mnt/opt
    register: check_mnt

  - name: delete file
    file:
      path: /mnt/opt
      state: absent
    when: check_mnt.stat.exists
 
  - name: Mount backup repository
    shell: cd /mnt && borg extract borg@192.168.56.20:zabbix::{{borg_backup_name.stdout}}
 
  - name: zabbix server stoped
    service:
      name: "{{item}}"
      state: stopped
    loop: 
     -  zabbix-server 

  # - name: Copy files
  #   copy:
  #     src: '{{item.src}}'
  #     dest: '{{item.dest}}'
  #     remote_src: yes 
  - name: Copy files
    shell: "cp -rp {{item.src}} {{item.dest}}"
    loop: 
      - {src: /mnt/usr/share/zabbix , dest: /usr/share/ }
      - {src: /mnt/etc , dest: / }
    
  - name: import backup db
    ansible.builtin.mysql_db:
      name: zabbix
      state: import
      target: /mnt/opt/backup/zabbix.sql
      login_user: root

  - name: zabbix server started
    service:
      name: zabbix-server
      state: started





- name: Restore backup
  hosts: backup
  tasks:
  - name: Borg ssh directory
    file:
      dest: /root/.ssh/
      owner: root
      group: root
      state: directory
      mode: 0700 

  - name: Borg ssh keypair
    copy:
      src: ./staff/id_ssh_rsa_borg
      dest: /root/.ssh/id_rsa        
      owner: root
      group: root
      mode: 0600 

  - name:  Add keypair known host
    shell: 'ssh-keyscan -H 192.168.56.20 >> /root/.ssh/known_hosts'
    delegate_to: "{{item}}" 
    loop:
      - back
      - front
      - monitoring
      - backup

  - name: Borg ssh keypair
    copy:
      src: ./staff/id_ssh_rsa_borg
      dest: /root/.ssh/id_rsa        
      owner: root
      group: root
      mode: 0600 
    delegate_to: "{{item}}"
    loop:
      - back
      - front
      - monitoring

  - name: reinit repository
    shell: 'borg init --encryption=none borg@192.168.56.20:{{item}}'
    loop:
      - zabbix
      - log
      - application-front
      - application-back
    ignore_errors: yes

  - name: Backup not encrypt repo accept
    shell: 'yes | borg list borg@192.168.56.20:{{item.repo}}'
    delegate_to: "{{item.deleg}}"
    loop: 
      - {deleg: monitoring ,repo: zabbix}
      - {deleg: monitoring ,repo: log} 
      - {deleg: front ,repo: application-front} 
      - {deleg: back ,repo: application-back}