---
- name: Prepare server monitoring
  hosts: monitoring
  vars:
    - zabbix_db_password: password
  handlers: 
    - name: SSHD RELOAD  
      service:
        name: sshd 
        state: reloaded
    
    - name: BORG SERVICE
      service:
        name: borg-backup.service 
        state: restarted
        enabled: yes   
        
    - name: CHRONYD RESTART
      service:
        name: chronyd 
        state: restarted
    
    - name: RSYSLOG RESTART 
      service:
        name: rsyslog 
        state: restarted
        enabled: yes        
    
    - name: RESTART FIREWALLD
      service:
       name: firewalld
       state: restarted
    
  tasks:
  - name: Open ssh perminition
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^\s*.?\s*PasswordAuthentication no'
      line: 'PasswordAuthentication yes'
    notify: SSHD RELOAD 
 

  - name: Chronyd configure
    timezone:
      name: 'Asia/Vladivostok' 
    notify: CHRONYD RESTART  

  - name: Start firewall
    service:
      name: firewalld
      state: started
      enabled: yes
######### syslog ############
  - name: Install syslog soft
    yum: 
      name: epel-release, vim, rsyslog, wget
      state: present
#### selinux semanage port -m -t syslogd_port_t -p tcp 514   
  - name: Configuration rsyslog   
    blockinfile:
      path: /etc/rsyslog.conf
      block: |
        # Provides UDP syslog reception
        $ModLoad imudp
        $UDPServerRun 514

        # Provides TCP syslog reception
        $ModLoad imtcp
        $InputTCPServerRun 514

        $template RemoteLogs, "/var/log/rsyslog/%HOSTNAME%/%PROGRAMNAME%.log"
        *.* ?RemoteLogs
        & ~
    notify: RSYSLOG RESTART 
####### zabbix #########
  - name: Set zabbix repo
    ansible.builtin.copy:
      src: staff/zabbix.repo
      dest: /etc/yum.repos.d/zabbix.repo
      mode: 0644
      owner: root
      group: root

  - name: install zabbix
    yum:
      name: "{{item}}"
      state: present  
    loop:
        - zabbix-server-mysql, zabbix-agent, MySQL-python
        - centos-release-scl
        - mariadb-server
        - zabbix-web-mysql-scl, zabbix-nginx-conf-scl
        
  - name: start mysql
    ansible.builtin.service:
      name: mariadb
      state: started
      enabled: yes
  
  - name: prepare mysql for zabbix
    shell: "{{item}}"  
    loop:
      - mysql -uroot -e "create database zabbix character set utf8 collate utf8_bin;"
      - mysql -uroot -e "grant all privileges on zabbix.* to zabbix@localhost identified by '{{zabbix_db_password}}';"
      - mysql -uroot -e "set global log_bin_trust_function_creators = 1;"
      - zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p{{zabbix_db_password}} zabbix
      - mysql -uroot -e "set global log_bin_trust_function_creators = 0;"
    ignore_errors: yes  
       
  - name: change config for zabbix
    ansible.builtin.replace:
      dest:  '{{item.path}}' 
      regexp: '{{item.reg}}'
      replace:  '{{item.rep}}'
    loop:
      - { path: '/etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf', reg: '#\s*listen\s*80;', rep: 'listen 80;' }
      - { path: '/etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf', reg: '#\s*server_name\s*example.com;', rep: 'server_name zabbix.local.com;' }
      - { path: '/etc/zabbix/zabbix_server.conf', reg: '#\s*DBPassword=', rep: 'DBPassword={{zabbix_db_password}}' }
      - { path: '/etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf', reg: 'listen.acl_users = apache\s+', rep: 'listen.acl_users = apache,nginx\n'}
      - { path: '/etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf', reg: '; php_value\[date.timezone\] = Europe\/Riga\s+', rep: 'php_value[date.timezone] = Asia/Vladivostok '}
  
  - name: open port
    ansible.builtin.firewalld:
      port: '{{item}}'
      state: enabled
      permanent: yes
    loop:
      - 80/tcp
      - 443/tcp
      - 514/tcp
      - 514/udp  
    notify: RESTART FIREWALLD

  - name: Create ssl directory
    file:
      dest:  /etc/opt/rh/rh-nginx116/nginx/ssl
      mode: 0644
      state: directory
      owner: root
      group: root

  - name: Create ssl directory
    file:
      dest:  /var/log/nginx
      mode: 0644
      state: directory
      owner: nginx
      group: nginx
      
  - name: Create ssl directory
    file:
      dest:  '/var/log/nginx/{{item}}'
      mode: 0644
      state: touch
      owner: nginx
      group: nginx  
    loop:    
      - error.log
      - access.log
  - name: Copy ssl configure zabbix
    copy:
      dest: "{{item.dest}}"
      src: "{{item.src}}"
    loop: 
      - {dest: /etc/opt/rh/rh-nginx116/nginx/ssl/ , src: staff/gallery3/ssl/server.pem}
      - {dest: /etc/opt/rh/rh-nginx116/nginx/ssl/ , src: staff/gallery3/ssl/server.key}
      - {dest: /etc/opt/rh/rh-nginx116/nginx/conf.d/ , src: staff/ssl-zabbix.conf}

  # - name: Selinux add rule
  #   shell: 'grep AVC /var/log/audit/audit.log* | audit2allow -M systemd-allow; semodule -i systemd-allow.pp'

  - name: Selinux
    shell: setenforce 0  
      
  - name: start service for zabbix
    service:
      name: "{{item}}"
      state: started
      enabled: yes
    loop: 
      - zabbix-server
      - zabbix-agent
      - rh-nginx116-nginx
      - rh-php72-php-fpm       
####### borg #########
  - name: Install soft
    yum:    
     name: borgbackup 

  - name: Create borg user
    user:
      name: borg
      state: present
      append: yes
      groups: sshd

  - name: Borg ssh directory
    file:
      dest: /root/.ssh/
      owner: root
      group: root
      state: directory
      mode: 0700 
  
  - name: Borg ssh keypair
    copy:
      src: ./staff/id_ssh_rsa_borg
      dest: /root/.ssh/id_rsa        
      owner: root
      group: root
      mode: 0600 

  - name:  Add keypair known host
    shell: 'ssh-keyscan -H 192.168.56.20 >> /root/.ssh/known_hosts'
  
  - name: Initialisation backup 
    shell: "{{item}}"
    loop:
      -  'borg init --encryption=none borg@192.168.56.20:zabbix'
      -  'borg init --encryption=none borg@192.168.56.20:log'
    ignore_errors: yes 

  - name: Create unit backup
    copy:
     dest:  /etc/systemd/system/borg-backup.service
     content: |
      [Unit]
      Description=Borg Backup

      [Service]
      Type=oneshot

      # Парольная фраза
      Environment="BORG_PASSPHRASE="
      # Репозиторий
      Environment=REPO=borg@192.168.56.20:
     
      # Создание бэкапа
      ExecStart=/bin/borg create  -C zstd ${REPO}zabbix::zabbix-{now:%%Y-%%m-%%d_%%H:%%M:%%S} /etc /usr/share/zabbix/ /opt/backup
      ExecStart=/bin/borg create  -C zstd ${REPO}log::log-{now:%%Y-%%m-%%d_%%H:%%M:%%S}  /var/log/

    notify: BORG SERVICE

  - name: Create unit timer
    copy:
     dest:  /etc/systemd/system/borg-backup.timer
     content: |
      [Unit]
      Description=Borg Backup

      [Timer]
      OnUnitActiveSec=5min

      [Install]
      WantedBy=timers.target
    notify: BORG SERVICE

  - name: Backup not encrypt repo accept
    shell: 'yes | borg list borg@192.168.56.20:{{item}}'
    loop: 
      - zabbix
      - log
  - name:  Enabled timer for backup
    service:
      name: borg-backup.timer
      state: started
      enabled: yes
#########SQL BACKUP###########

  - name: Create backup directory
    file:
      dest: /opt/backup
      state: directory
      mode: 0755
      owner: root
      group: root


  - name: Add crontab task
    lineinfile:
      dest: /etc/crontab
      regex: '.*mysqldump -u zabbix -p{{zabbix_db_password}} zabbix > \/opt\/backup\/zabbix.sql'
      line: '*/60 * * * * root mysqldump -u zabbix -p{{zabbix_db_password}} zabbix > /opt/backup/zabbix.sql'

#####################PLAYBOOK BACKUP############################################################################


- name: Configure backup server
  hosts: backup
  vars:
    - zabbix_conf: |
        PidFile=/var/run/zabbix/zabbix_agentd.pid
        LogFile=/var/log/zabbix/zabbix_agentd.log
        LogFileSize=0
        Server=192.168.56.15
        ServerActive=192.168.56.15
        ListenIP=0.0.0.0
        HostnameItem=system.hostname
        Include=/etc/zabbix/zabbix_agentd.d/*.conf 

  handlers: 
    - name: RESTART SERVICE SSHD
      service:
        name: sshd 
        state: reloaded
    
    - name: RSYSLOG RESTART 
      service:
        name: rsyslog 
        state: restarted
        enabled: yes      

    - name: RESTART SERVICE ZABBIX
      service:
        name: zabbix-agent
        state: restarted   
    
    - name: CHRONYD RESTART
      service:
        name: chronyd 
        state: restarted  

    - name: RESTART FIREWALLD
      service:
       name: firewalld
       state: restarted
           

  tasks:
  - name: add repo zabbix
    copy:
      dest: /etc/yum.repos.d/zabbix.repo
      content: |
          [smb-local-zabbix50]
          name=Samberi Local - Zabbix 5.0 $releasever
          baseurl=https://repo.zabbix.com/zabbix/5.0/rhel/$releasever/$basearch/
          enabled=1
          gpgcheck=0       

  - name: Install soft
    yum: 
      name: '{{item}}'
      state: latest
    loop: 
      - epel-release
      - vim
      - rsyslog
      - borgbackup
      - zabbix-agent

  - name: Chronyd configure
    timezone:
      name: 'Asia/Vladivostok' 
    notify: CHRONYD RESTART  
  
  - name: Start firewall
    service:
      name: firewalld
      state: started
      enabled: yes
############RSYSLOG###################
  - name: Borg rsyslog conf
    copy:
      dest: /etc/rsyslog.d/borg.conf
      content: |
        if $programname == 'borg' then /var/log/borg.log
        & stop
      owner: root
      group: root
      mode: 0644
    notify: RSYSLOG RESTART 
  
  - name: Borg rsyslog remote conf
    copy:
      dest: /etc/rsyslog.d/borg_remote.conf
      content: |
        *.* @@192.168.56.15:514
      owner: root
      group: root
      mode: 0644
    notify: RSYSLOG RESTART
  ################BORG##########
  - name: Create borg user
    user:
      name: borg
      state: present
      append: yes
      groups: sshd
  - name: Borg zabbix-agent remote conf
    copy:
      dest: /etc/rsyslog.d/zabbix.conf
      content: |
        $ModLoad imfile
        $InputFileName /var/log/zabbix/zabbix-agentd.log
        *.* @@192.168.56.15:514
      owner: root
      group: root
      mode: 0644
    notify: RSYSLOG RESTART 

  - name: Open ssh perminition
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^\s*.?\s*PasswordAuthentication no'
      line: 'PasswordAuthentication yes'
    notify: RESTART SERVICE SSHD 
    
  - name: Create backup directory 
    file:
      dest: /var/backup
      owner: borg
      group: borg
      state: directory
      mode: 0755
  
  - name: Borg ssh directory
    file:
      dest: /home/borg/.ssh
      owner: borg
      group: borg
      state: directory
      mode: 0700

  - name: Borg ssh keypair
    file:
      dest: /home/borg/.ssh/id_ssh_rsa
      owner: borg
      group: borg
      state: touch
      mode: 0600

  - name: Generate keypair 
    ansible.builtin.openssh_keypair:
      path: /home/borg/.ssh/id_ssh_rsa
      owner: borg
      group: borg

  - name: COPY /home/borg/.ssh/authorized_keys
    ansible.builtin.copy:
      src: /home/borg/.ssh/id_ssh_rsa.pub
      dest: /home/borg/.ssh/authorized_keys
      owner: borg
      group: borg
      mode: 0600   
      remote_src: yes

  - name: COPY /home/borg/.ssh/id_ssh_rsa
    ansible.builtin.fetch:
      src: /home/borg/.ssh/id_ssh_rsa
      dest: ./staff/id_ssh_rsa_borg    
      flat: yes
  
##################ZABBIX-AGENT#########################
  - name: ZABBIX CONF
    copy:
      dest: "/etc/zabbix/zabbix_agentd.conf"
      content: "{{ zabbix_conf }}"
    notify: RESTART SERVICE ZABBIX
  
  - name: START ZABBIX
    service: 
      name: zabbix-agent 
      state: started 
      enabled: yes
  - name: GET SERVICES STATUS (for firewalld)
    systemd:
      name: firewalld
    register: firewalld_status

  - name: OPEN ZABBIX PORT
    firewalld:
      port: 10050/tcp
      permanent: yes
      state: enabled
    when: firewalld_status.status.ActiveState == "active"
    notify: RESTART FIREWALLD

            


